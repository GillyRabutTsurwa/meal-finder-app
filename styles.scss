* {
  margin: 0;
  padding: 0;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}

html {
  font-size: 62.5%;
}

body {
  position: relative;
  background-color: #e7e7e7;
  color: #2d2013;
  font-family: Verdana, Geneva, Tahoma, sans-serif;
  -webkit-transition: background-color 0.5s ease;
  transition: background-color 0.5s ease;

  // NOTE: code definitions when dark mode is enabled
  // changing the background to a dark brown
  // changing the universal text colour from dark brown to white
  // we are basically switching the colour settings
  &.dark {
    background-color: #2d2013;
    color: #fff;

    // changing the border of the image cards from dark brown to white, to make a dark contrast with the dark background
    & .meals .meal img {
      border: 4px solid #fff;
    }

    // doing the same thing to the image for a single, particular meal
    & .single-meal img {
      border: 4px solid #fff;
    }

    & .title {
      background-image: -webkit-gradient(linear, left top, right top, from(rgb(204, 204, 204)), to(rgba(255, 255, 255, 0.75)));
      background-image: linear-gradient(to right, rgb(204, 204, 204), rgba(255, 255, 255, 0.75));
    }
  }
}

//NOTE: making our toggler
.toggle {
  position: absolute;
  top: 5rem;
  right: 5rem;
  height: 2.6rem;
  width: 5rem;
  border: 2px solid #2d2013;
  border-radius: 2rem;
  cursor: pointer;

  // NOTE: making the circle inside our toggler. it is actually very easy:
  // we simply make a pseudo element that is a circle and position it exactly where we want it inside our toggle container.
  // since a pseudoelement is a child of the element from which it's created, we can give it an absolute positioning and define "relative" for the parent.
  &::before {
    content: "";
    position: absolute;
    top: -0.2rem;
    /* Experimentation to come up with the value*/
    left: -0.1rem;
    /* Experimentation to come up with the value*/
    height: 2.2rem;
    width: 2.1rem;
    border: 2px solid #2d2013;
    border-radius: 50%;
    background-color: #2d2013;

    // transition for when we switch to and fro the active class
    -webkit-transition: all 0.5s ease;

    transition: all 0.5s ease;
  }
}

// NOTE: this is the class (specific only to the element with the toggle class) that will be activated (no pun intended) when we click on this toggle element (this is done via the javascript). when this element gets the active class, we're changing the border to white to contrast the dark background
.toggle.active {
  border: 2px solid #fff;

  // and we are moving the circle inside it from the left to the right of the toggle container, we changing the background color also to make it look nice.
  &::before {
    left: 2.2rem;
    background-color: #fff;
  }
}

.title {
  background-image: -webkit-gradient(linear, left top, right top, from(rgb(45, 32, 19)), to(rgba(45, 32, 19, 0.6)));
  background-image: linear-gradient(to right, rgb(45, 32, 19), rgba(45, 32, 19, 0.6));
  color: transparent;
  -webkit-background-clip: text;
  background-clip: text;
  font-size: 2.5rem;
  font-family: Poppins, sans-serif;
  margin-bottom: 2rem;
}

.container {
  margin: 5rem auto;
  //   max-width: 80rem;
  width: 95%; // I actually like full width instead
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  text-align: center;
}

.flex {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

///////////////////////////////////////////////

.search-input,
.search-btn,
.random-btn {
  border: 1px solid #dedede;
  border-top-left-radius: 4px;
  border-bottom-left-radius: 4px;
  font-size: 1.4rem;
  padding: 0.8rem 1rem;
  outline: none;
  margin-bottom: 4rem;
}

.search-input {
  width: 30rem;
  margin-right: 0.5rem;

  &:focus {
    outline: 0.25rem solid #2d2013;
  }
}

.search-btn {
  border-left: 0;
  border-radius: 0;
  border-top-right-radius: 4px;
  border-bottom-right-radius: 4px;
  cursor: pointer;
}

.random-btn {
  margin-left: 1rem;
  border-top-right-radius: 4px;
  border-bottom-right-radius: 4px;
  cursor: pointer;
}

.meals {
  //NOTE: Using grid instead of flexbox
  // display: -webkit-box;
  // display: -ms-flexbox;
  // display: flex;
  // -ms-flex-wrap: wrap;
  //     flex-wrap: wrap;
  width: 100%;
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(18rem, 18rem));
  gap: 3rem;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;

  //NOTE: Class appears using JS
  .meal {
    position: relative;
    // height: 18rem;
    // width: 18rem;
    text-align: center;
    cursor: pointer;

    img {
      width: 100%;
      height: 100%;
      border: 4px solid #2d2013;
      border-radius: 2px;
    }

    &-info {
      position: absolute;
      top: 0;
      left: 0;
      height: 100%;
      width: 100%;
      background-color: rgba(0, 0, 0, 0.7);

      display: -webkit-box;

      display: -ms-flexbox;

      display: flex;
      -webkit-box-pack: center;
      -ms-flex-pack: center;
      justify-content: center;
      -webkit-box-align: center;
      -ms-flex-align: center;
      align-items: center;
      -webkit-transition: opacity 0.2s ease;
      transition: opacity 0.2s ease;

      opacity: 0;

      a {
        color: rgb(245, 245, 245);
        font-size: 1.4rem;
        text-decoration: none;
        letter-spacing: 0.125rem;
        word-spacing: 0.125rem;
        padding: 0 0.5rem;
      }
    }

    &:hover .meal-info {
      opacity: 1;
    }
  }
}

.single-meal {
  margin: 3rem auto;
  width: 70%;

  img {
    width: 30rem;
    margin: 1.5rem;
    border: 4px solid #2d2013;
    border-radius: 2px;
  }

  p {
    margin: 0;
    letter-spacing: 0.5px;
    line-height: 1.5;
  }

  ul {
    list-style: none;
    padding-left: 0;

    li {
      border: 1px solid #ededed;
      border-radius: 3px;
      background-color: #fff;
      display: inline-block;
      color: #2d2013;
      font-size: 1.2rem;
      font-weight: bold;
      padding: 5px;
      margin: 0 5px 5px 0;
    }
  }

  &-info {
    margin: 2rem;
    padding: 1rem;
  }
}

/*
.meal-info.active h3 {
  color: #2D2013;
} */

/* MEDIA QUERIES */

// 50em = 800px
@media (max-width: 50em) {
  .meals {
    grid-template-columns: repeat(3, 1fr);
  }
}

// 43.75em = 700px
@media (max-width: 43.75em) {
  .meals {
    grid-template-columns: repeat(2, 1fr);
  }

  .meal {
    height: 20rem;
    width: 20rem;
  }
}

// 31.25em = 500px
@media (max-width: 31.25em) {
  .meals {
    grid-template-columns: 1fr;
  }

  .meal {
    height: 30rem;
    width: 30rem;
  }

  input[type="text"] {
    width: 100%;
  }
}
